package bls

import (
	"testing"

	"github.com/stretchr/testify/require"
)

func TestMapG2PairedV18(t *testing.T) {
	// output from rust library
	// msg: [1, 2, 3, 4]
	// ciphersuite: [11, 12, 13, 14]
	// g1: [131, 111, 101, 2, 150, 122, 179, 98, 201, 225, 146, 174, 226, 77, 21, 60, 140, 1
	// 0, 217, 128, 181, 82, 104, 221, 252, 249, 56, 124, 193, 185, 123, 239, 36, 240, 121,
	// 183, 140, 209, 83, 128, 16, 32, 220, 63, 255, 54, 102, 156]
	// g2: [160, 93, 104, 53, 27, 41, 139, 58, 91, 218, 1, 247, 99, 145, 6, 244, 46, 130, 12
	// 9, 130, 230, 49, 221, 51, 122, 110, 218, 197, 119, 123, 115, 207, 77, 29, 152, 101, 1
	// 40, 227, 27, 180, 46, 206, 203, 247, 17, 32, 40, 233, 9, 162, 246, 128, 239, 5, 94, 8
	// 5, 50, 14, 217, 228, 20, 130, 226, 88, 244, 97, 110, 73, 241, 216, 222, 158, 122, 93,
	//  148, 130, 16, 43, 139, 5, 162, 119, 129, 160, 19, 26, 132, 114, 18, 146, 73, 48, 56,
	//  146, 137, 22]
	msg := []byte{1, 2, 3, 4}
	ciphersuite := []byte{11, 12, 13, 14}

	g2 := mapG2PairedV18(msg, ciphersuite)
	buffG2 := NewG2(nil).ToCompressed(g2)
	expG2 := []byte{160, 93, 104, 53, 27, 41, 139, 58, 91, 218, 1, 247, 99, 145, 6, 244, 46, 130, 12, 9, 130, 230, 49, 221, 51, 122, 110, 218, 197, 119, 123, 115, 207, 77, 29, 152, 101, 1, 40, 227, 27, 180, 46, 206, 203, 247, 17, 32, 40, 233, 9, 162, 246, 128, 239, 5, 94, 8, 5, 50, 14, 217, 228, 20, 130, 226, 88, 244, 97, 110, 73, 241, 216, 222, 158, 122, 93, 148, 130, 16, 43, 139, 5, 162, 119, 129, 160, 19, 26, 132, 114, 18, 146, 73, 48, 56, 146, 137, 22}
	require.Equal(t, expG2, buffG2)

	g1 := mapG1PairedV18(msg, ciphersuite)
	buffG1 := NewG1().ToCompressed(g1)
	expG1 := []byte{131, 111, 101, 2, 150, 122, 179, 98, 201, 225, 146, 174, 226, 77, 21, 60, 140, 1, 0, 217, 128, 181, 82, 104, 221, 252, 249, 56, 124, 193, 185, 123, 239, 36, 240, 121, 183, 140, 209, 83, 128, 16, 32, 220, 63, 255, 54, 102, 156}
	require.Equal(t, expG1, buffG1)

}

func TestMapG2PairingRustV19(t *testing.T) {
	// output from rust library
	// msg: [1, 2, 3, 4]
	// ciphersuite: [11, 12, 13, 14]
	// g1: [136, 41, 115, 190, 51, 57, 186, 221, 122, 190, 164, 136, 206, 67, 232, 125, 233, 231, 173,
	//  137, 45, 104, 72, 73, 112, 102, 51, 164, 37, 57, 193, 116, 137, 71, 209, 254, 181, 132, 238, 1
	// 73, 194, 241, 24, 210, 169, 220, 180, 96]
	// g2: [130, 213, 97, 142, 126, 5, 186, 59, 86, 64, 226, 91, 204, 63, 187, 129, 169, 40, 29, 11, 1
	// 91, 9, 50, 207, 28, 0, 76, 251, 86, 151, 252, 6, 180, 245, 1, 135, 188, 144, 82, 163, 153, 198,
	//  36, 117, 177, 168, 94, 227, 0, 79, 2, 31, 240, 26, 65, 152, 238, 84, 95, 242, 11, 194, 172, 11
	// 8, 40, 87, 36, 181, 147, 183, 174, 64, 153, 219, 3, 130, 109, 101, 39, 51, 214, 232, 149, 146,
	// 223, 47, 153, 72, 176, 5, 15, 43, 42, 146, 74, 247]

	msg := []byte{1, 2, 3, 4}
	ciphersuite := []byte{11, 12, 13, 14}

	/* g1 := mapG1PairingPlusV19Sha256(msg, ciphersuite)*/
	//buffG1 := NewG1().ToCompressed(g1)
	//expG1 := []byte{136, 41, 115, 190, 51, 57, 186, 221, 122, 190, 164, 136, 206, 67, 232, 125, 233, 231, 173, 137, 45, 104, 72, 73, 112, 102, 51, 164, 37, 57, 193, 116, 137, 71, 209, 254, 181, 132, 238, 1, 73, 194, 241, 24, 210, 169, 220, 180, 96}
	//require.Equal(t, expG1, buffG1)

	g2 := mapG2PairingPlusV19Sha256(msg, ciphersuite)
	buffG2 := NewG2(nil).ToCompressed(g2)
	expG2 := []byte{130, 213, 97, 142, 126, 5, 186, 59, 86, 64, 226, 91, 204, 63, 187, 129, 169, 40, 29, 11, 1, 91, 9, 50, 207, 28, 0, 76, 251, 86, 151, 252, 6, 180, 245, 1, 135, 188, 144, 82, 163, 153, 198, 36, 117, 177, 168, 94, 227, 0, 79, 2, 31, 240, 26, 65, 152, 238, 84, 95, 242, 11, 194, 172, 11, 8, 40, 87, 36, 181, 147, 183, 174, 64, 153, 219, 3, 130, 109, 101, 39, 51, 214, 232, 149, 146, 223, 47, 153, 72, 176, 5, 15, 43, 42, 146, 74, 247}
	require.Equal(t, expG2, buffG2)

}
